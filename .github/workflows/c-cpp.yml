name: C/C++ CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    strategy:
      matrix:
        os:         [ubuntu-latest]
        cc:         [gcc]
        make_flags: ["", "NO_VALGRIND=1 USE_STANDARD_TMPFILE=1", "NO_VALGRIND=1 USE_SYSTEM_MINIZIP=1", "NO_VALGRIND=1 USE_DTOA_LIBRARY=1", "NO_VALGRIND=1 USE_NO_MD5=1", "NO_VALGRIND=1 USE_OPENSSL_MD5=1", "NO_VALGRIND=1 USE_FMEMOPEN=1"]
    runs-on: ${{ matrix.os }}
    env:
      CC: ${{ matrix.cc }}

    steps:
    - uses: actions/checkout@v2

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pytest
        sudo apt-get -y gcc-multilib
        sudo apt-get -y libminizip-dev
        sudo apt-get -y libssl-dev
        sudo apt-get -y valgrind
        sudo apt-get -y zlib1g-dev
        sudo apt-get -y zlib1g-dev:i386

    - name: make
      run: CFLAGS='-Werror' ${{ matrix.make_flags }} make V=1
      

    
#    - name: test unit
#      run: make test_unit V=1
      
#    - name: test functional
#      run: make test_functional V=1
      
#    - name: test cpp
#      run: make test_cpp V=1
      
#    - name: test valgrind
#      run: make test_valgrind V=1
 
#    - name: test cmake
#      run: |
#        pwd
#        ls -l
#        make test_cmake V=1

