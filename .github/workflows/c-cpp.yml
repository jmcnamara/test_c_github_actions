name: C/C++ CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    strategy:
      matrix:
        os:         [ubuntu-latest]
        cc:         [gcc, clang]
        make_flags: ["", 
                     "USE_STANDARD_TMPFILE=1 NO_VALGRIND=1", 
                     "USE_SYSTEM_MINIZIP=1   NO_VALGRIND=1", 
                     "USE_DTOA_LIBRARY=1     NO_VALGRIND=1", 
                     "USE_NO_MD5=1           NO_VALGRIND=1", 
                     "USE_OPENSSL_MD5=1      NO_VALGRIND=1", 
                     "USE_FMEMOPEN=1         NO_VALGRIND=1"]

    runs-on: ${{ matrix.os }}
    env:
      CC: ${{ matrix.cc }}

    steps:
    - uses: actions/checkout@v2

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pytest
        sudo apt-get -y install libminizip-dev
        sudo apt-get -y install libssl-dev
        sudo apt-get -y install valgrind
        sudo apt-get -y install zlib1g-dev

    - name: make
      run: CFLAGS='-Werror' ${{ matrix.make_flags }} make V=1
      
    - name: test unit
      run: CFLAGS='-Werror' ${{ matrix.make_flags }} make test_unit V=1
      
    - name: test functional
      run: CFLAGS='-Werror' ${{ matrix.make_flags }} make test_functional V=1
      
    - name: test cpp
      run: CFLAGS='-Werror' ${{ matrix.make_flags }} make test_cpp V=1
      
#    - name: test valgrind
#      run: make test_valgrind V=1
 
